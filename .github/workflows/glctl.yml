# Copyright 2024 The huhouhua Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http:www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: "glctl"

on:
  push:
    branches: [ main ]
  pull_request:
    branches: ["*"]
env:
  GO_VERSION: '1.22'
  DOCKER_REGISTRY: ghcr.io/glctl
  DOCKER_COMPOSE_VERSION: v2.21.0
jobs:
  # Check if there is any dirty change for go mod tidy
  go-mod:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout ${{ github.ref }}"
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          # https://github.com/actions/setup-go#supported-version-syntax
          # ex:
          # - 1.18beta1 -> 1.18.0-beta.1
          # - 1.18rc1 -> 1.18.0-rc.1
          go-version: ${{ env.GO_VERSION }}

      - name: Check go mod
        run: |
          make tidy
          git diff --exit-code go.mod
          git diff --exit-code go.sum
  format:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout ${{ github.ref }}"
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Setup Golang Caches
        uses: actions/cache@v4
        with:
          path: |-
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ github.run_id }}
          restore-keys: ${{ runner.os }}-go

      - run: git stash # restore patch

      - name: Check format
        run: |
          make format
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout ${{ github.ref }}"
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Setup Golang Caches
        uses: actions/cache@v4
        with:
          path: |-
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ github.run_id }}
          restore-keys: ${{ runner.os }}-go

      - run: git stash # restore patch

      - name: Check syntax and styling of go sources
        run: |
          make lint

  conformance-test:
    runs-on: ubuntu-latest
    needs: [lint,format]
    steps:
      - name: "Checkout ${{ github.ref }}"
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Setup Golang Caches
        uses: actions/cache@v4
        with:
          path: |-
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ github.run_id }}
          restore-keys: ${{ runner.os }}-go

      - run: git stash # restore patch

      - name: Install docker-compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose version

      - name: Run gitlab service
        run: |
          make run-gitlab

      - name: Add test data
        run: |
          make testdata

      - name: Run unit test and get test coverage
        run: |
          make cover

      - name: Collect Test Coverage File
        uses: actions/upload-artifact@v1.0.0
        with:
          name: main-output
          path: _output/coverage.out
  build:
    runs-on: ubuntu-latest
    needs: [conformance-test]
    steps:
      - name: "Checkout ${{ github.ref }}"
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Setup Golang Caches
        uses: actions/cache@v4
        with:
          path: |-
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ github.run_id }}
          restore-keys: ${{ runner.os }}-go

      - run: git stash # restore patch

      - name: Build source code for host platform
        run: |
          make build