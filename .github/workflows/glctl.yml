name: "lint and Test"

on:
  push:
    branches: [ main ]
  pull_request:
    branches: ["*"]

env:
  GO_VERSION: '1.25'
  REGISTRY_PREFIX: ghcr.io
  DOCKER_COMPOSE_VERSION: v2.21.0
  DOCKER_FILE: Dockerfile.dev

permissions:
  contents: read
  packages: write

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout ${{ github.ref }}"
        uses: actions/checkout@v5

      - name: Setup Go
        uses: actions/setup-go@v6
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Setup Golang Caches
        uses: actions/cache@v4
        with:
          path: |-
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ github.run_id }}
          restore-keys: ${{ runner.os }}-go

      - run: git stash # restore patch

      - name: Install tools
        run: |
          make tools

      - name: Check copyright
        run: |
          make verify-copyright

      - name: Check format
        run: |
          make format
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout ${{ github.ref }}"
        uses: actions/checkout@v5

      - name: Setup Go
        uses: actions/setup-go@v6
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Setup Golang Caches
        uses: actions/cache@v4
        with:
          path: |-
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ github.run_id }}
          restore-keys: ${{ runner.os }}-go

      - run: git stash # restore patch
      - name: Check syntax and styling of go sources
        run: |
          make lint

  test:
    runs-on: ubuntu-latest
    needs: [lint,check]
    steps:
      - name: "Checkout ${{ github.ref }}"
        uses: actions/checkout@v5

      - name: Free Up GitHub Actions Ubuntu Runner Disk Space ðŸ”§
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          swap-storage: true

      - name: Setup Go
        uses: actions/setup-go@v6
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Setup Golang Caches
        uses: actions/cache@v4
        with:
          path: |-
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ github.run_id }}
          restore-keys: ${{ runner.os }}-go

      - run: git stash # restore patch

      - name: Install docker-compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose version

      - name: Run gitlab service
        run: |
          make run-gitlab

      - name: Add test data
        run: |
          make testdata

      - name: Run unit test and get test coverage
        run: |
          source testdata/credentials.sh
          env | grep GITLAB
          make cover

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: huhouhua/glctl
          files: _output/coverage.out