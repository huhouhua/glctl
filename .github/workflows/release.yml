name: release

on:
  release:
    types: [created]

env:
  GO_VERSION: '1.22.4'
  CGO_ENABLED: 0
  DOCKER_FILE: Dockerfile.release

permissions:
  contents: read
  packages: write

jobs:
  releases-linux-binaries:
    name: Release Go Binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux,windows,darwin]
        goarch: [amd64, arm64]
        exclude:
          - goarch: "386"
            goos: darwin
          - goarch: arm64
            goos: windows
    steps:
      - uses: actions/checkout@v4

      - name: Set ldflags variables to shared
        run: echo "LDFLAGS=$(go run scripts/gen-ldflags.go)" >> $GITHUB_ENV

      - uses: wangyoucao577/go-release-action@v1.53
        with:
          github_token: ${{ secrets.REPO_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          goversion: ${{ env.GO_VERSION }}
          ldflags: ${{ env.LDFLAGS }}
          extra_files: LICENSE README.md

  image-gitHub:
    name: Release image for GitHub Container Registry
    runs-on: ${{ matrix.os }}
    needs: [releases-linux-binaries]
    env:
      DOCKER_BUILD_ARG_RELEASE: ${{ github.ref_name }}
      REGISTRY_PREFIX: ghcr.io
    strategy:
      matrix:
        go_version: ['1.22']
        os: [ubuntu-latest]
    steps:
      - name: Set up Go ${{ matrix.go_version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go_version }}
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set version variables to shared
        run: echo "VERSION=${DOCKER_BUILD_ARG_RELEASE#v}" >> $GITHUB_ENV

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY_PREFIX }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build docker images for host arch and push images to registry
        run: |
          make image.build.$(go env GOOS)_$(go env GOARCH)

  image-dockerHub:
    name: Release image for DockerHub
    runs-on: ${{ matrix.os }}
    needs: [releases-linux-binaries]
    env:
      DOCKER_BUILD_ARG_RELEASE: ${{ github.ref_name }}
      REGISTRY_PREFIX: huhouhua
      IMAGE: glctl
    strategy:
      matrix:
        go_version: ['1.22']
        os: [ubuntu-latest]
    steps:
      - name: Set up Go ${{ matrix.go_version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go_version }}
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set version variables to shared
        run: echo "VERSION=${DOCKER_BUILD_ARG_RELEASE#v}" >> $GITHUB_ENV

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build docker images for host arch and push images to registry
        run: |
          make image.build.$(go env GOOS)_$(go env GOARCH)